{"#",acf6192e-81ca-46ef-93a6-5a6968b78663,
{9,
{3,
{-2,"НомерСтроки",
{"Pattern",
{"N"}
},"N",10},
{0,"Наименование",
{"Pattern",
{"S",50,1}
},"Наименование",10},
{1,"Код",
{"Pattern",
{"S"}
},"Код",10}
},
{2,3,0,-2,1,0,2,1,
{1,84,
{2,0,3,
{"N",1},
{"S","Загрузить из файла"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)

ТекПозиция = 0;	

Диалог	=	новый ДиалогВыбораФайла (РежимДиалогаВыбораФайла.ВыборКаталога);
если Диалог.Выбрать() Тогда
	
	Путь	=	Диалог.Каталог;	
	
	Для каждого ТекСтрока из ТаблицаРезультата Цикл
		
		Ссылка			=	ТекСтрока.ВнешнийОтчет;	
		ДвоичныеДанные	=	Ссылка.ХранилищеВнешнейОбработки.Получить();
		ПолноеИмяФайла 	= 	Путь+""\""+ТекСтрока.Код+""_""+РаботаСФайлами.УдалитьЗапрещенныеСимволыИмени(Ссылка.Наименование);
		
		ДвоичныеДанные.Записать(ПолноеИмяФайла+"".epf"");
		
		Сообщить(ПолноеИмяФайла);
		
		ТекПозиция = ТекПозиция + 1;
		Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
		
	КонецЦикла;
	
	
КонецЕсли;

"},0},
{2,1,3,
{"N",2},
{"S","сохранить  таблицу значений"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
//	ТекПозиция = 0;	
//Для каждого ТекСтрока из ТаблицаРезультата Цикл
//=ТекСтрока.Номенклатура;
//=ТекСтрока.ХарактеристикаНоменклатуры;
//=ТекСтрока.КоличествоОстаток;
//=ТекСтрока.СтоимостьОстаток;
//=ТекСтрока.ВесОстаток;
//	ТекПозиция = ТекПозиция + 1;
//	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");

//КонецЦикла;
	Имяфайла	=	"""";
	// Сохранение дерева запросов 
	// переменная ДеревоЗапросов имеет тип ДеревоЗначений
	//ОбработкаРеестрДокументов	=	Обработки.РеестрДокументовРДС.Создать();
	//Таб	=	ОбработкаРеестрДокументов.ПолучитьТаблицуНезакрытыДокументов(Справочники.Пользователи.НайтиПоКоду(""АвсюкНаталья""),НачалоМесяца('20131101'),КонецМесяца('20131101'));
	
	
	Если ПустаяСтрока(ИмяФайла) Тогда
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		Диалог.Заголовок = ""Укажите файл для списка запросов"";
		Диалог.Фильтр = ""Файлы значений (*.znc)|*.znc|Все файлы (*.*)|*.*"";
		Диалог.Расширение = ""znc"";
		Если Диалог.Выбрать() Тогда
			ИмяФайла = Диалог.ПолноеИмяФайла;
			ИмяПути = Диалог.Каталог;
		КонецЕсли;
	КонецЕсли;
	
	Сохранено=ЗначениеВФайл(ИмяФайла, ТаблицаРезультата);	
	Если Сохранено Тогда
		Сообщить("" Значение сохранено."",СтатусСообщения.Информация);
	Иначе
		Сообщить("" Значение не сохранено."",СтатусСообщения.Важное);
	КонецЕсли;"},0},
{2,2,3,
{"N",3},
{"S","Создание документа на подчистку хвоста"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
//	ТекПозиция = 0;	
//Для каждого ТекСтрока из ТаблицаРезультата Цикл
//=ТекСтрока.Номенклатура;
//=ТекСтрока.Склад;
//=ТекСтрока.ХарактеристикаНоменклатуры;
//=ТекСтрока.СерияНоменклатуры;
//=ТекСтрока.СтатусПартии;
//=ТекСтрока.Заказ;
//=ТекСтрока.Качество;
//=ТекСтрока.Количество;
//=ТекСтрока.Стоимость;
//=ТекСтрока.Вес;
//=ТекСтрока.Поле1;
//	ТекПозиция = ТекПозиция + 1;
//	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");

//КонецЦикла;

//НовыйДокументПеремещения				=	Документы.РеализацияТоваровУслуг.СоздатьДокумент();	
//НовыйДокументПеремещения				=	Документы.ПеремещениеТоваров.СоздатьДокумент();	
НовыйДокументПеремещения				=	Документы.ПоступлениеТОвароУслуг.СоздатьДокумент();	

//НовыйДокументПеремещения.Организация	=	ТаблицаРезультата[0].Поле1;	
НовыйДокументПеремещения.Склад			=	ТаблицаРезультата[0].Склад;	


Для каждого СтрокаЗапроса из ТаблицаРезультата Цикл
	НоваяСтрока = НовыйДокументПеремещения.Товары.Добавить();
	НоваяСтрока.Номенклатура = СтрокаЗапроса.Номенклатура;
	НоваяСтрока.ХарактеристикаНоменклатуры = СтрокаЗапроса.ХарактеристикаНоменклатуры;
	НоваяСтрока.Количество = СтрокаЗапроса.Количество;
	//НоваяСтрока.Цена = СтрокаЗапроса.Цена;
	НоваяСтрока.Сумма= СтрокаЗапроса.Стоимость;
	НоваяСтрока.СтавкаНДС= Перечисления.СтавкиНДС.БезНДС;
	НоваяСтрока.ЕдиницаИзмерения= НоваяСтрока.Номенклатура.единицаХраненияОстатков;
	НоваяСтрока.Коэффициент= 1;
	РассчитатьЦенуТабЧасти(НоваяСтрока, НовыйДокументПеремещения);
	
	ПриИзмененииХарактеристикиТовара(НоваяСтрока);
	
	////Получаем значение веса
	//НоваяСтрока.Вес = РегистрыСведений.ЗначенияСвойствОбъектов.Получить(Новый Структура(""Объект,Свойство"",
	//НоваяСтрока.ХарактеристикаНоменклатуры, ПланыВидовХарактеристик.СвойстваОбъектов.Вес)).Значение;
	////Получаем значение размера
	//НоваяСтрока.Размер = РегистрыСведений.ЗначенияСвойствОбъектов.Получить(Новый Структура(""Объект,Свойство"",
	//НоваяСтрока.ХарактеристикаНоменклатуры, ПланыВидовХарактеристик.СвойстваОбъектов.Размер)).Значение;
	////Получаем значение вставки														
	//НоваяСтрока.Вставка = РегистрыСведений.ЗначенияСвойствОбъектов.Получить(Новый Структура(""Объект,Свойство"",
	//НоваяСтрока.ХарактеристикаНоменклатуры, ПланыВидовХарактеристик.СвойстваОбъектов.Вставка)).Значение;		
	
КонецЦикла;

НовыйДокументПеремещения.ПолучитьФорму().Открыть();"},0},
{2,3,3,
{"N",4},
{"S","Создание прочих документов"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
//	ТекПозиция = 0;	
//Для каждого ТекСтрока из ТаблицаРезультата Цикл
//=ТекСтрока.Номенклатура;
//=ТекСтрока.Склад;
//=ТекСтрока.ХарактеристикаНоменклатуры;
//=ТекСтрока.СерияНоменклатуры;
//=ТекСтрока.СтатусПартии;
//=ТекСтрока.Заказ;
//=ТекСтрока.Качество;
//=ТекСтрока.Количество;
//=ТекСтрока.Стоимость;
//=ТекСтрока.Вес;
//=ТекСтрока.Поле1;
//	ТекПозиция = ТекПозиция + 1;
//	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");

//КонецЦикла;

//НовыйДокументПеремещения							=	Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();	
НовыйДокументПеремещения							=	Документы.ПеремещениеТоваров.СоздатьДокумент();	

НовыйДокументПеремещения.Организация				=	ТаблицаРезультата[0].Поле1;	
//НовыйДокументПеремещения.ДокументОснование			=	ТаблицаРезультата[0].ссылка;	
НовыйДокументПеремещения.ВПути						=	Истина;


НовыйДокументПеремещения.Товары.загрузить(ТаблицаРезультата);

ЗаполнитьОбщийВес(НовыйДокументПеремещения.Товары);
//Для каждого СтрокаЗапроса из ТаблицаРезультата Цикл
//	
//	
//	//НоваяСтрока = НовыйДокументПеремещения.Товары.Добавить();
//	//НоваяСтрока.Номенклатура = СтрокаЗапроса.Номенклатура;
//	//НоваяСтрока.ХарактеристикаНоменклатуры = СтрокаЗапроса.ХарактеристикаНоменклатуры;
//	//НоваяСтрока.Количество = СтрокаЗапроса.Количество;
//	////НоваяСтрока.Цена = СтрокаЗапроса.Цена;
//	//НоваяСтрока.Сумма= СтрокаЗапроса.Стоимость;
//	//НоваяСтрока.СтавкаНДС= Перечисления.СтавкиНДС.БезНДС;
//	//НоваяСтрока.ЕдиницаИзмерения= НоваяСтрока.Номенклатура.единицаХраненияОстатков;
//	//НоваяСтрока.Коэффициент= 1;
//	//РассчитатьЦенуТабЧасти(НоваяСтрока, НовыйДокументПеремещения);
//	//
//	//ПриИзмененииХарактеристикиТовара(НоваяСтрока);
//	//
//	//////Получаем значение веса
//	////НоваяСтрока.Вес = РегистрыСведений.ЗначенияСвойствОбъектов.Получить(Новый Структура(""Объект,Свойство"",
//	////НоваяСтрока.ХарактеристикаНоменклатуры, ПланыВидовХарактеристик.СвойстваОбъектов.Вес)).Значение;
//	//////Получаем значение размера
//	////НоваяСтрока.Размер = РегистрыСведений.ЗначенияСвойствОбъектов.Получить(Новый Структура(""Объект,Свойство"",
//	////НоваяСтрока.ХарактеристикаНоменклатуры, ПланыВидовХарактеристик.СвойстваОбъектов.Размер)).Значение;
//	//////Получаем значение вставки														
//	////НоваяСтрока.Вставка = РегистрыСведений.ЗначенияСвойствОбъектов.Получить(Новый Структура(""Объект,Свойство"",
//	////НоваяСтрока.ХарактеристикаНоменклатуры, ПланыВидовХарактеристик.СвойстваОбъектов.Вставка)).Значение;		
//	//
//КонецЦикла;

НовыйДокументПеремещения.ПолучитьФорму().Открыть();"},0},
{2,4,3,
{"N",5},
{"S","Создание документа корр остатков"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
//	ТекПозиция = 0;	
//Для каждого ТекСтрока из ТаблицаРезультата Цикл
//=ТекСтрока.Номенклатура;
//=ТекСтрока.Склад;
//=ТекСтрока.ХарактеристикаНоменклатуры;
//=ТекСтрока.СерияНоменклатуры;
//=ТекСтрока.ДокументОприходования;
//=ТекСтрока.СтатусПартии;
//=ТекСтрока.Заказ;
//=ТекСтрока.Качество;
//=ТекСтрока.Количество;
//=ТекСтрока.Стоимость;
//=ТекСтрока.Вес;
//	ТекПозиция = ТекПозиция + 1;
//	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");

//КонецЦикла;
ДокОб	=	Документы.КорректировкаОстатковПартииТоваровНаСкладах.СоздатьДокумент();
тч	=	ДокОб.Корректировка;
ТекПозиция = 0;	
Для каждого СтрокаЗапроса из ТаблицаРезультата Цикл
	ОбработкаПрерыванияПользователя();
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
	НоваяСтрока								=	тч.Добавить();
	НоваяСтрока.ДокументОприходования		=	СтрокаЗапроса.ДокументОприходования;	
	НоваяСтрока.Качество					=	СтрокаЗапроса.Качество;	
	НоваяСтрока.Номенклатура				=	СтрокаЗапроса.Номенклатура;	
	НоваяСтрока.ХарактеристикаНоменклатуры	=	СтрокаЗапроса.ХарактеристикаНоменклатуры;	
	НоваяСтрока.СтатусПартии				=	СтрокаЗапроса.СтатусПартии;
	ДокОб.Склад								=	СтрокаЗапроса.Склад;
	НоваяСтрока.СтоимостьДо					=	СтрокаЗапроса.Стоимость;
	НоваяСтрока.ВесДо						=	СтрокаЗапроса.Вес;
	НоваяСтрока.КоличествоДо				=	СтрокаЗапроса.Количество;
	
	НоваяСтрока.Корректировка				=	СтрокаЗапроса.Стоимость;
	НоваяСтрока.КорректировкаВес			=	СтрокаЗапроса.Вес;
	НоваяСтрока.КорректировкаКоличество		=	СтрокаЗапроса.Количество;

	
	
КонецЦикла;

ДокОб.ПолучитьФорму().Открыть();"},0},
{2,5,3,
{"N",6},
{"S","ОбнулениеДокументОтчет о розничных продажах"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
	ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	ДокументОбъект=ТекСтрока.Ссылка.ПолучитьОбъект();
	
		Для каждого текСтрокиДок из ДокументОбъект.Товары цикл
			текСтрокиДок.Себестоимость	=	0;			
		КонецЦикла;
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");

КонецЦикла;
"},0},
{2,6,3,
{"N",7},
{"S","Документ инвентаризация"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
//	ТекПозиция = 0;	
//Для каждого ТекСтрока из ТаблицаРезультата Цикл
//=ТекСтрока.Номенклатура;
//=ТекСтрока.ХарактеристикаНоменклатуры;
//=ТекСтрока.Качество;
//=ТекСтрока.СтатусПартии;
//	ТекПозиция = ТекПозиция + 1;
//	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");

//КонецЦикла;

ДокОб	=	Документы.ИнвентаризацияТоваровНаСкладе.СоздатьДокумент();
ДокОб.Товары.Загрузить(ТаблицаРезультата);

ДокОб.ПолучитьФорму().Открыть();"},0},
{2,7,3,
{"N",8},
{"S","Удаление документов"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	попытка 
		//ДокументОб							=	ТекСтрока.Ссылка1.ПолучитьОбъект();//
		//ДокументОб.Удалить();
		
		
		ДокументОб							=	ТекСтрока.Ссылка.ПолучитьОбъект();//
		ДокументОб.Удалить();

		
	исключение
		сообщить(""""+ОписаниеОшибки());
	конецпопытки;
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,8,3,
{"N",9},
{"S","Проведение документов"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	//сообщить(строка(ТекСтрока.Ссылка));
	ДокументОбъект						=	ТекСтрока.Ссылка.ПолучитьОбъект();
	//ДокументОбъект.мЧастичноеПроведение	=	ДокументОбъект.ЧастичноеПроведение;
	//ДокументОбъект.ПереносНаТекущийДень	=	Истина;
	
	
	ОбработкаПрерыванияПользователя();
	
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
	Конецпопытки;
	
	
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,9,3,
{"N",10},
{"S","Константы"},
{"S","Константы.НомерВерсииКонфигурации.Установить(""1.0.0.57"");"},0},
{2,10,3,
{"N",11},
{"S","Замена мыла"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	//МУ=ТекСтрока.ЭлектроннаяПочта;
	МУ=ТекСтрока.Ссылка.ПолучитьОбъект();
	МУ.ЭлектроннаяПочта	=	""legavaz@tehnomir.lipetsk.ru"";
	МУ.Записать();
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,11,3,
{"N",12},
{"S","Пометить на удаление"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	ДокументОб=ТекСтрока.Ссылка.ПолучитьОбъект();
	ДокументОб.ПометкаУдаления=Истина;
	ДокументОб.Записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,12,3,
{"N",13},
{"S","Сохранить в файл"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ИмяФайла	=	""C:\nomeklatura.txt"";

Текст		=	новый ТекстовыйДокумент;

ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	Текст.ДобавитьСтроку(ОбщегоНазначения.ПривестиНомерКДлине(ТекСтрока.Код,7));
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;

Текст.Записать(ИмяФайла,КодировкаТекста.ANSI);"},0},
{2,13,3,
{"N",14},
{"S","Cgfdsdfasdfasdfasdfadsfasdfasdf"},
{"S","



	
	Контрагент	=	Справочники.Контрагенты.НайтиПоКоду(""С-0002081"");
	Договор		=	неопределено;
	
	ТабДок						=	новый ТабличныйДокумент;
	
	ДатаСправки					=	'20140311142700';	

	// ► M.Rashidov, 16 августа 2013 г. 11:11:30
	//СредстваКонтрагента		=	Модуль77.глПолучитьДолгКлиентаВВалюте(Контрагент,ТекущаяДата(),Константы.ВалютаРегламентированногоУчета.Получить());
	ПараметрыКредитаКонтрагенту	=	МодульСерверныхПроцедур.глПолучитьДолгКлиентаВВалюте(Контрагент,ДатаСправки,Константы.ВалютаРегламентированногоУчета.Получить());
	// ◄ M.Rashidov, 16 августа 2013 г. 11:11:30	
	
	ДолгКонтрагентовОтдела		=	Справочники.Контрагенты.ПолучитьДолгПоКонтрагентуОтдела(ДатаСправки, Контрагент);
	КредитОтдела				=	Справочники.Контрагенты.ПолучитьКредитПоКонтрагентуОтдела(ДатаСправки, Контрагент);
	
	ДолгКлиента					=	ПараметрыКредитаКонтрагенту.СуммаДолга;  //СредстваКонтрагента.СуммаДолга;		
	ЗалогПоКонтрагенту			=	?(ПараметрыКредитаКонтрагенту.СуммаЗалога>0,ПараметрыКредитаКонтрагенту.СуммаЗалога,0); //СредстваКонтрагента.СуммаЗалога;          	
	СуммаРезерваПоКлиенту		=	Справочники.Контрагенты.ВернутьСуммуРезерваКлиена(Контрагент, ДатаСправки);          	
	
	ВыборкаЗаказов				=	Справочники.Контрагенты.ВернутьСуммуЗаказаКлиена(Контрагент, ДатаСправки);
	СуммаПереданнаяМенеджеру	=   0;
	
	// ► M.Rashidov, 16 августа 2013 г. 11:11:30
	//ПараметрыКредитаКонтрагенту	=	РегистрыСведений.КредитыКонтрагентов_РДС.ВернутьПараметрыКредитаКонтрагента(ДатаСправки,Контрагент);
	// ◄ M.Rashidov, 16 августа 2013 г. 11:11:30	
	
	//ЛимитЗадолженностиОтдела	=	Модуль77.глОстатокЛимитаЗадолженностиОтдела(Контрагент,ДатаСправки);	
	ОбщийКредитКлиентовМен		=	Справочники.Контрагенты.ВернутьОбщийКредитКлиентовМенеджера(Контрагент,ДатаСправки);
	ОбщийДопКредитКлиентовМен	=	Справочники.Контрагенты.ВернутьОбщийДопКредитКлиентовМенеджера(Контрагент,ДатаСправки);
	ОбщийДолгКлиентовМенеджера	=	Справочники.Контрагенты.ВернутьОбщийДолгКлиентовМенеджера(Контрагент, ДатаСправки);
	
	//-------------------------------------------------------------------------------------------------
	
	Макет											=	Справочники.Контрагенты.ПолучитьМакет(""Макет"");
	ОбластьСообщения								=	Макет.ПолучитьОбласть(""ТекстСообщения"");
	ОбластьПустаяСтрока								=	Макет.ПолучитьОбласть(""ПустаяСтрока"");
	
	ОбластьСообщения.Параметры.Детали				=	""""+Формат(ДатаСправки,""ДЛФ=DDT"");	
	ТабДок.Вывести(ОбластьСообщения);

	ОбластьСообщения.Параметры.Детали				=	""Менеджер:	"";
	ОбластьСообщения.Параметры.Сумма				=	Строка(Контрагент.ТекущийМенеджер)+"" ""+?(ЗначениеЗаполнено(Контрагент.ТекущийМенеджер),""(""+Контрагент.ТекущийМенеджер.Родитель+"")"","""");
	ТабДок.Вывести(ОбластьСообщения);
	
	ОбластьСообщения.Параметры.Детали				=	""Контрагент:	"";
	ОбластьСообщения.Параметры.Сумма				=	Контрагент.НаименованиеПолное;
	ТабДок.Вывести(ОбластьСообщения);
	
	ОбластьСообщения.Параметры.Детали				=	""Кредит клиенту:"";
	ОбластьСообщения.Параметры.Сумма				=	Строка(ПараметрыКредитаКонтрагенту.СуммаКредита)+"" руб. на ""+Строка(ПараметрыКредитаКонтрагенту.Глубина)+"" дней"";
	ТабДок.Вывести(ОбластьСообщения);
	
	Если Договор <>	Неопределено Тогда
		ОбластьСообщения.Параметры.Детали			=	""По договору:""+Строка(Договор);			
		ТабДок.Вывести(ОбластьСообщения);		
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьПустаяСтрока);
	
	ОбластьСообщения.Параметры.Детали				=	""Долг клиента  : "";
	ОбластьСообщения.Параметры.Сумма				=	формат(ДолгКлиента,""ЧЦ=15; ЧДЦ=2; ЧН=0,00"")+"" руб.""+?(ДолгКлиента<0,"" (Аванс)"","""");
	ТабДок.Вывести(ОбластьСообщения);
	ТабДок.Вывести(ОбластьПустаяСтрока);
	     	
	ОбластьСообщения.Параметры.Детали				=	""Залог на сумму : "";
	ОбластьСообщения.Параметры.Сумма				=	формат(ЗалогПоКонтрагенту,""ЧЦ=15; ЧДЦ=2; ЧН=0,00"")+"" руб."";
	ТабДок.Вывести(ОбластьСообщения);
	ТабДок.Вывести(ОбластьПустаяСтрока);
	
	//▼ 16.11.2013-09:42 // Юдин Константин // ☢ ДОРАБОТКА
	
	ОбластьСообщения.Параметры.Детали				= ""Сумма переданная торговому представителю: "";
	ОбластьСообщения.Параметры.Сумма				= Формат(СуммаПереданнаяМенеджеру, ""ЧЦ=15; ЧДЦ=2; ЧН=0,00"") + "" руб."";
	ТабДок.Вывести(ОбластьСообщения);
	ТабДок.Вывести(ОбластьПустаяСтрока);

	//▲ 16.11.2013-09:42 // Юдин Константин // ☢ ДОРАБОТКА                                       
	
	ОбластьСообщения.Параметры.Детали				=	""Зарезервировано на сумму : "";
	ОбластьСообщения.Параметры.Сумма				=	формат(СуммаРезерваПоКлиенту,""ЧЦ=15; ЧДЦ=2; ЧН=0,00"")+"" руб."";
	ТабДок.Вывести(ОбластьСообщения);
	ТабДок.Вывести(ОбластьПустаяСтрока);
	
	Если ВыборкаЗаказов.Следующий() Тогда
		
		ОбластьСообщения.Параметры.Детали				=	""Заказано на сумму : "";
		ОбластьСообщения.Параметры.Сумма				=	формат(ВыборкаЗаказов.Сумма,""ЧЦ=15; ЧДЦ=2; ЧН=0,00"")+"" руб."";
		ТабДок.Вывести(ОбластьСообщения);
		ОбластьСообщения.Параметры.Детали				=	"""";
		ОбластьСообщения.Параметры.Сумма				=	"""";
		
		
		ОбластьСообщения.Параметры.Детали				=	""Заказано прямых доставок на сумму : "";
		ОбластьСообщения.Параметры.Сумма				=	формат(ВыборкаЗаказов.СуммаПрямыхЗаказов,""ЧЦ=15; ЧДЦ=2; ЧН=0,00"")+"" руб."";
		ТабДок.Вывести(ОбластьСообщения);		
		
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьПустаяСтрока);   
	
	ОбластьСообщения.Параметры.Детали				=	""Остаток кредита : "";
	ОбластьСообщения.Параметры.Сумма				=	формат((ПараметрыКредитаКонтрагенту.СуммаКредита+ЗалогПоКонтрагенту)-ДолгКлиента,""ЧЦ=15; ЧДЦ=2; ЧН=0,00"")+"" руб."";
	ТабДок.Вывести(ОбластьСообщения);
	
	ОбластьСообщения.Параметры.Детали				=	""Расчет остатка : "";
	ОбластьСообщения.Параметры.Сумма				=	""(""+ПараметрыКредитаКонтрагенту.СуммаКредита+?(ЗалогПоКонтрагенту<0,"""",""+"")+ЗалогПоКонтрагенту+"")""+?(ДолгКлиента<0,"""",""-"")+ДолгКлиента;
	ТабДок.Вывести(ОбластьСообщения);
	
	ТабДок.Вывести(ОбластьПустаяСтрока); 	
	
	СтрокаПросрочки									=	Новый Структура(""ГлубинаПросрочки,СуммаПросрочки"");
	ОтчетВзаиморасчеты								=	Отчеты.Взаиморасчеты.Создать();
	ОтчетВзаиморасчеты.КонецПериода					=	КонецДня(ТекущаяДата());
	//
	ОбластьСообщения.Параметры.Детали				=	""Просрочка: "";	
	
	
	//расшифровка просрочки
	СтрокаПросрочки.СуммаПросрочки					=	ОтчетВзаиморасчеты.ВернутьСуммуПросрочки(Контрагент,ПараметрыКредитаКонтрагенту.Глубина);
	ОбластьСообщения.Параметры.Сумма				=	ОтчетВзаиморасчеты.ВернутьТекстПросрочки(Контрагент,СтрокаПросрочки,ДолгКлиента,ПараметрыКредитаКонтрагенту.Глубина);
	ТабДок.Вывести(ОбластьСообщения);
	
	
	ВО								=	ОтчетВзаиморасчеты;
	ВО.ВариантОтчета				=	""График платежей"";
	ВО.ИнициализироватьПостроительОтчетов();
	
	//ВО.НачалоПериода				=	ДатаНачала;
	ВО.КонецПериода					=	ТекущаяДата();
	ВО.СортироватьПоДатеОплаты		=	Ложь;
	
	ВО.ПостроительОтчетов.Отбор.Контрагент.Значение			=	Контрагент;
	ВО.ПостроительОтчетов.Отбор.Контрагент.Использование	=	Истина;	
	ТаблицаВзаиморасчетов	=	ВО.ВернутьТаблицуВзаиморасчетовГрафикПлатежей();	
	ТаблицаВзаиморасчетов.сортировать(""Дней"");
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	Для каждого ТекСтрока из ТаблицаВзаиморасчетов Цикл		
		Если ЗначениеЗаполнено(ТекСтрока.Накладная ) и ТекСтрока.СуммаПросрочкиПоДокументу>0 Тогда
			ОбластьСообщения.Параметры.Детали				=	""№:""+ТекСтрока.Накладная.Номер+"" от ""+формат(ТекСтрока.Накладная.Дата,""ДФ=dd/MM/yy"");
			ОбластьСообщения.Параметры.Ссылка				=	ТекСтрока.накладная;
			ОбластьСообщения.Параметры.Сумма				=	""Просрочка: ""+формат(ТекСтрока.СуммаПросрочкиПоДокументу,""ЧЦ=15; ЧДЦ=2; ЧН=0,00"")+"" руб.  на ""+ТекСтрока.Дней+"" дней"";
			ТабДок.Вывести(ОбластьСообщения,2,""гр"",Истина);
		КонецЕсли;
	КонецЦикла;
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	
	
	
	
	//расшифровка просрочки
	
	
	ТабДок.Вывести(ОбластьПустаяСтрока); 		
	
	ОбластьСообщения.Параметры.Детали				=	""Кредит отдела : "";
	ОбластьСообщения.Параметры.Сумма				=	формат(КредитОтдела,""ЧЦ=15; ЧДЦ=2; ЧН=0,00"")+"" руб."";
	ТабДок.Вывести(ОбластьСообщения);
	
	ОбластьСообщения.Параметры.Детали				=	""Остаток кредита отдела : "";
	ОбластьСообщения.Параметры.Сумма				=	формат(КредитОтдела-ДолгКонтрагентовОтдела,""ЧЦ=15; ЧДЦ=2; ЧН=0,00"")+"" руб."";
	ТабДок.Вывести(ОбластьСообщения);
	
	ОбластьСообщения.Параметры.Детали				=	""Общий кредит клиентов менеджера : "";
	ОбластьСообщения.Параметры.Сумма				=	формат(ОбщийКредитКлиентовМен,""ЧЦ=15; ЧДЦ=2; ЧН=0,00"")+"" руб."";
	ТабДок.Вывести(ОбластьСообщения);
	
	ОбластьСообщения.Параметры.Детали				=	""Общий доп. кредит клиентов менеджера : "";
	ОбластьСообщения.Параметры.Сумма				=	формат(ОбщийДопКредитКлиентовМен,""ЧЦ=15; ЧДЦ=2; ЧН=0,00"")+"" руб."";
	ТабДок.Вывести(ОбластьСообщения);
	
	
	ОбластьСообщения.Параметры.Детали				=	""ИТОГО (кредит + доп.кредит): "";
	ОбластьСообщения.Параметры.Сумма				=	формат(?(ЗначениеЗаполнено(ОбщийКредитКлиентовМен),ОбщийКредитКлиентовМен,0)+?(ЗначениеЗаполнено(ОбщийДопКредитКлиентовМен),ОбщийДопКредитКлиентовМен,0),""ЧЦ=15; ЧДЦ=2; ЧН=0,00"")+"" руб."";
	ТабДок.Вывести(ОбластьСообщения);

	
	ТабДок.Вывести(ОбластьПустаяСтрока); 		
	
	ОбластьСообщения.Параметры.Детали				=	""Общий долг клиентов менеджера : "";
	ОбластьСообщения.Параметры.Сумма				=	формат(ОбщийДолгКлиентовМенеджера,""ЧЦ=15; ЧДЦ=2; ЧН=0,00"")+"" руб."";	
	ТабДок.Вывести(ОбластьСообщения);
	ТабДок.Вывести(ОбластьПустаяСтрока); 
		
	ТабДок.Показать();
	
"},0},
{2,14,3,
{"N",15},
{"S","Запись справочника"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	ВыборкаЕдиниц = Справочники.ЕдиницыИзмерения.Выбрать(, ТекСтрока.Ссылка);
	
	Если не ВыборкаЕдиниц.Следующий() Тогда
		НайденнаяЕдиницаОбъект = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
		НайденнаяЕдиницаОбъект.Наименование            = СокрЛП(ТекСтрока.Ссылка.БазоваяЕдиницаИзмерения);
		НайденнаяЕдиницаОбъект.ЕдиницаПоКлассификатору = ТекСтрока.Ссылка.БазоваяЕдиницаИзмерения;
		НайденнаяЕдиницаОбъект.Коэффициент             = 1;
		НайденнаяЕдиницаОбъект.Владелец                = ТекСтрока.Ссылка;
		
		Попытка
			НайденнаяЕдиницаОбъект.Записать();
			едост	=НайденнаяЕдиницаОбъект.Ссылка;
		Исключение
			Сообщить(""Не удалось записать единицу хранения остатков: "" + ОписаниеОшибки(), СтатусСообщения.Важное);
			Отказ = Истина;			
		КонецПопытки;		
	
	Иначе
		едост	=ВыборкаЕдиниц.Ссылка;		
	Конецесли;
	
	
	
	ДокументОбъект=ТекСтрока.Ссылка.ПолучитьОбъект();
	ДокументОбъект.ОбменДанными.Загрузка=Истина;
	
	ДокументОбъект.ЕдиницаХраненияОстатков	=	едост;
	ДокументОбъект.ЕдиницаДляОтчетов		=	едост;	
	
	ДокументОбъект.Записать();
	
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,15,3,
{"N",16},
{"S","Преобазовать"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	Если ТекСтрока.Код=""000000000"" Тогда		
	    ТекСтрока.н77	=	"""";
	Иначе
		ТекСтрока.н77	=	сокрлп(ОбщегоНазначения.ПривестиНомерКДлине(ТекСтрока.Код,7));;	
	КонецЕсли;
	
		
	
	//ТекСтрока.КонтрагентКод	=	СтрЗаменить(ТекСтрока.КонтрагентКод	,Символы.НПП,"""");
	
	//ТекСтрока.КонтрагентКод	=	Лев(ТекСтрока.КонтрагентКод	,7);

	
	
	ТекПозиция 				= ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,16,3,
{"N",17},
{"S","ПрошитьБС"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	СО=ТекСтрока.Ссылка.ПолучитьОбъект();
	СО.ОсновнойБанковскийСчет	=	ТекСтрока.Ссылка1;
	со.ОбменДанными.Загрузка	=	Истина;
	со.Записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,17,3,
{"N",18},
{"S","сохранить  в текстДокумент"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)

Имяфайла	=	"""";
// Сохранение дерева запросов 
// переменная ДеревоЗапросов имеет тип ДеревоЗначений
Если ПустаяСтрока(ИмяФайла) Тогда
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Заголовок = ""Укажите файл для списка запросов"";
	Диалог.Фильтр = ""Файлы значений (*.txt)|*.txt|Все файлы (*.*)|*.*"";
	Диалог.Расширение = ""txt"";
	Если Диалог.Выбрать() Тогда
		ИмяФайла = Диалог.ПолноеИмяФайла;
		ИмяПути = Диалог.Каталог;
	КонецЕсли;
КонецЕсли;


ТекДОк	=	Новый ТекстовыйДОкумент;
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	Текдок.ДобавитьСтроку(ТекСтрока.Н77);	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
КонецЦикла;

текдок.ЗАписать(имяФайла,КодировкаТекста.ANSI);

Сообщить(""Выгружено"");
"},0},
{2,18,3,
{"N",19},
{"S","Преобазовать 2 дата в строку"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	ТекСтрока.Дата77	=	формат(ТекСтрока.ДатаПредставление,""ДФ=yyyyMMdd"");               
	ТекСтрока.н77	=	сокрлп(ОбщегоНазначения.ПривестиНомерКДлине(ТекСтрока.Номер,10));;	
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,19,3,
{"N",20},
{"S","проставить организацию"},
{"S","ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	ДокументОб=ТекСтрока.Ссылка.ПолучитьОбъект();
	ДокументОб.Организация=ТекСтрока.КонтрагентОрганизация_РДС;
	ДокументОб.ОбменДанными.Загрузка = Истина;
	ДокументОб.Записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,20,3,
{"N",21},
{"S","Прошивка банковскихсчетов"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	НС	=	Справочники.Банки.НайтиПоКоду(ТекСтрока.Поле1);
	Если не НС.Пустая() Тогда
		СО	=	ТекСтрока.Ссылка.ПолучитьОБъект();
		СО.Банк		=	НС;
		Попытка
		со.записать();	
		Исключение;
		КонецПопытки;
		
	КонецЕсли;
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,21,3,
{"N",22},
{"S","проставить ставку НДС"},
{"S","ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
 		НастройкиПользователей = РегистрыСведений.НастройкиПользователей.СоздатьМенеджерЗаписи();
		НастройкиПользователей.Пользователь = ТекСтрока.Ссылка;
		НастройкиПользователей.Настройка = ПланыВидовХарактеристик.НастройкиПользователей.ОсновнаяСтавкаНДС;
		НастройкиПользователей.Значение = Перечисления.СтавкиНДС.НДС18;
        НастройкиПользователей.Записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,22,3,
{"N",23},
{"S","Проведение документов Не контролировать кредит"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	//сообщить(строка(ТекСтрока.Ссылка));
	ДокументОбъект=ТекСтрока.Ссылка.ПолучитьОбъект();
	
	ДокументОбъект.ПараметрПроведения 		= 	""БезКонтроляОстатков"";
	ДокументОбъект.НеКонтролироватьКредит	=	Истина;
	
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
	Конецпопытки;    	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,23,3,
{"N",24},
{"S","Прошивка ГТД"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
//	=ТекСтрока.ссылка;
	
	
	ДО	=	ТекСтрока.ссылка.ПолучитьОбъект();
	
	Если ТипЗнч(ТекСтрока.Ссылка)=Тип(""ДокументСсылка.ПоступлениеТоваровУслуг"") Тогда
		УправлениеЗапасами.ОприходованиеГТД(ТекСтрока.Ссылка,ДО.Движения,ЛОжь,Истина);
	Иначе
		УправлениеЗапасами.СписаниеГТД(ТекСтрока.Ссылка,ДО.Движения,ЛОжь,Истина);
	КонецЕсли; 	
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,24,3,
{"N",25},
{"S","проставить наличие договора"},
{"S","ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	ДоговорОб=ТекСтрока.Ссылка.ПолучитьОбъект();
	ДоговорОб.Наличие_РДС = истина;
	ДоговорОб.ОбменДанными.Загрузка = Истина;
	ДоговорОб.Записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,25,3,
{"N",26},
{"S","Прошивка накладных"},
{"S","ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	ДоговорОб=ТекСтрока.Ссылка.ПолучитьОбъект();
	
	ДоговорОб.ДатаНаЗавтра	=	Текстрока.НаЗавтраДата;
	
	ДоговорОб.ОбменДанными.Загрузка = Истина;
	ДоговорОб.Записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,26,3,
{"N",27},
{"S","Очистка ГТД"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	НЗ	=	РегистрыНакопления.ПланыПродажМенеджеров.СоздатьНаборЗаписей();
	
	
	
	НЗ.Отбор.регистратор.Значение	=	ТекСтрока.регистратор;
	
	НЗ.Записать(Истина);
	

	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,27,3,
{"N",28},
{"S","Убрать НетДокументов"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	ДО=ТекСтрока.Ссылка.получитьОбъект();
	ДО.НетДокументовТТН	=	Ложь;
	
	ДО.ОбменДанными.Загрузка	=	Истина;
	до.Записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,28,3,
{"N",29},
{"S","Поствить учет НДс"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	ДО	=	ТекСтрока.Ссылка.ПолучитьОбъект();
	
	ДО.ВозвратПоставщику		=	Истина;
	До.ОбменДанными.Загрузка	=	Истина;
	
	до.Записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,29,3,
{"N",30},
{"S","Запись менеджера в товаре"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	

МенеджерФедонина = Справочники.Менеджеры_РДС.НайтиПоНаименованию(""Федонина Мария"");

Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	Товар = ТекСтрока.Ссылка.ПолучитьОбъект();
	Товар.ОбменДанными.Загрузка=Истина;
	Товар.Менеджер_РДС = МенеджерФедонина;
	Товар.Записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,30,3,
{"N",31},
{"S","ЗаписатьОбъект"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	СО	=	ТекСтрока.Ссылка.ПолучитьОбъект();
	со.Записать();
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,31,3,
{"N",32},
{"S","Очистить движения"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	НаборЗаписей	=	РегистрыНакопления.Заказы.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.регистратор.Значение	=	ТекСтрока.Регистратор;
	НаборЗаписей.Записать();	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,32,3,
{"N",33},
{"S","Сортировать Расчет ком"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	До=ТекСтрока.Ссылка.ПолучитьОбъект();	
	До.Расчет.Сортировать(""Документ"");
	ДО.зАПИСАТЬ();
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,33,3,
{"N",34},
{"S","сохранить  таблицу значений"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
//	ТекПозиция = 0;	
//Для каждого ТекСтрока из ТаблицаРезультата Цикл
//=ТекСтрока.Номенклатура;
//=ТекСтрока.ХарактеристикаНоменклатуры;
//=ТекСтрока.КоличествоОстаток;
//=ТекСтрока.СтоимостьОстаток;
//=ТекСтрока.ВесОстаток;
//	ТекПозиция = ТекПозиция + 1;
//	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");

//КонецЦикла;
	Имяфайла	=	"""";
	// Сохранение дерева запросов 
	// переменная ДеревоЗапросов имеет тип ДеревоЗначений
	Если ПустаяСтрока(ИмяФайла) Тогда
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		Диалог.Заголовок = ""Укажите файл для списка запросов"";
		Диалог.Фильтр = ""Файлы значений (*.znc)|*.znc|Все файлы (*.*)|*.*"";
		Диалог.Расширение = ""znc"";
		Если Диалог.Выбрать() Тогда
			ИмяФайла = Диалог.ПолноеИмяФайла;
			ИмяПути = Диалог.Каталог;
		КонецЕсли;
	КонецЕсли;
	
	Сохранено=ЗначениеВФайл(ИмяФайла, ТаблицаРезультата);	
	Если Сохранено Тогда
		Сообщить("" Значение сохранено."",СтатусСообщения.Информация);
	Иначе
		Сообщить("" Значение не сохранено."",СтатусСообщения.Важное);
	КонецЕсли;"},0},
{2,34,3,
{"N",35},
{"S","Сохранить ВО в папку"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)

ТекПозиция = 0;	

Диалог	=	новый ДиалогВыбораФайла (РежимДиалогаВыбораФайла.ВыборКаталога);
если Диалог.Выбрать() Тогда
	
	Путь	=	Диалог.Каталог;	
	
	Для каждого ТекСтрока из ТаблицаРезультата Цикл
		
		Ссылка			=	ТекСтрока.ВнешнийОтчет;	
		ДвоичныеДанные	=	Ссылка.ХранилищеВнешнейОбработки.Получить();
		ПолноеИмяФайла 	= 	Путь+""\""+ТекСтрока.Код+""_""+РаботаСФайлами.УдалитьЗапрещенныеСимволыИмени(Ссылка.Наименование);
		
		ДвоичныеДанные.Записать(ПолноеИмяФайла+"".epf"");
		
		Сообщить(ПолноеИмяФайла);
		
		ТекПозиция = ТекПозиция + 1;
		Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
		
	КонецЦикла;
	
	
КонецЕсли;

"},0},
{2,35,3,
{"N",36},
{"S","Загрузить Обработки"},
{"S","	Диалог	=	новый ДиалогВыбораФайла (РежимДиалогаВыбораФайла.ВыборКаталога);
	если Диалог.Выбрать() Тогда
		
		Путь	=	Диалог.Каталог;	
		
		МассивВО	=	НайтиФайлы(Диалог.Каталог,""*.epf"");
		
		Для каждого ТекФайл из МассивВО Цикл
			НС		=	Справочники.ВнешниеОбработки.НайтиПоКоду(лев(ТекФайл.Имя,найти(ТекФайл.Имя,""_"")));
			Если не НС.пустая() Тогда
				СВО								=	НС.получитьОбъект();
				СВО.ХранилищеВнешнейОбработки	=	Новый ХранилищеЗначения(Новый ДвоичныеДанные(ТекФайл.ПолноеИмя));	
				СВО.Записать();			
				Сообщить(СВО.наименование+"" ок."");
			КонецЕсли;
			
		КонецЦикла; 		
		
	КонецЕсли;
"},0},
{2,36,3,
{"N",37},
{"S","Новый номер поступления"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	ДО=ТекСтрока.Ссылка.ПолучитьОбъект();	
	до.УстановитьНовыйНомер(Модуль77.глУстановитьНовыйНомер(до));
	до.ОбменДанными.Загрузка=Истина;
	до.записать();
	Обмен_НБ.РегистрацияОбъектаВСтеке(до);  	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,37,3,
{"N",38},
{"S","Очистка РС"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	
	МЗ	=	РегистрыСведений.ЭлектронныеПисьма.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МЗ,ТекСтрока);
	МЗ.Прочитать();
	Если ЗначениеЗаполнено(МЗ.Сообщение) Тогда
		МЗ.Удалить();
	КонецЕсли;
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,38,3,
{"N",39},
{"S","прошивка групп истории"},
{"S","	//ТаблицаРезультата  (вся таблица, цикл по полям)
	ТекПозиция = 0;	
	ГруппаРазное	=	Константы.ГруппаРазное.Получить();
	
	мИсторияГруппы		=	Неопределено;

	
	Для каждого ТекСтрока из ТаблицаРезультата Цикл 	
		
		Сообщить(""""+ТекСтрока.Ссылка.код+"" , ""+ТекСтрока.Ссылка);
		
		Если ТекСтрока.ссылка.Родитель	=	ГруппаРазное 
			или ТекСтрока.ссылка.Родитель.ПринадлежитЭлементу(ГруппаРазное) Тогда	
			
			мИсторияГруппы		=	МодульСерверныхПроцедур.ВернутьКаталогИсторииПоНоменклатуре(ТекСтрока.СтараяГруппа_РДС);			
			
		Иначе
			
			Если не ТекСтрока.ссылка.ЭтоГруппа Тогда
				мИсторияГруппы	=	МодульСерверныхПроцедур.ВернутьКаталогИсторииПоНоменклатуре(ТекСтрока.ссылка.Родитель);		
			Иначе
				//Если не ТекСтрока.ссылка.ЭтоНовый() Тогда
					мИсторияГруппы	=	МодульСерверныхПроцедур.ВернутьКаталогИсторииПоНоменклатуре(ТекСтрока.Ссылка);	
				//КонецЕсли;		
			КонецЕсли;
			
			
		КонецЕсли;
		
		
		Если ТипЗнч(мИсторияГруппы)=тип(""Строка"") Тогда
			ОбщегоНазначения.СообщитьИнформациюПользователю(мИсторияГруппы);		
			
		ИначеЕсли ТипЗнч(мИсторияГруппы)=тип(""СправочникСсылка.ИсторияГруппНоменклатуры"") Тогда
			ИсторияГруппы	=	мИсторияГруппы;	
			
			СО								=	ТекСтрока.Ссылка.получитьОбъект();
			СО.ПрошивкаИстории				=	Ложь;	
			СО.ИсторияГруппы				=	ИсторияГруппы;	
			со.обменДанными.Загрузка		=	Истина;
			со.записать();
			
			
			
		КонецЕсли;		
		
		
		ТекПозиция = ТекПозиция + 1;
		Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
		
	КонецЦикла;"},0},
{2,39,3,
{"N",40},
{"S","Очистка истории"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
//	ТекПозиция = 0;	
//Для каждого ТекСтрока из ТаблицаРезультата Цикл
//=ТекСтрока.Ссылка;
//=ТекСтрока.ИсторияГруппы;
//	ТекПозиция = ТекПозиция + 1;
//	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");

//КонецЦикла;
//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	СО							=	ТекСтрока.Ссылка.ПолучитьОбъект();
	СО.ИсторияГруппы			=	Неопределено;
	со.обменДанными.Загрузка	=	ИСтина;
	со.Записать();
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,40,3,
{"N",41},
{"S","Обновление истроии групп"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	СО	=ТекСтрока.Ссылка.ПолучитьОбъект();
	со.обменДанными.Загрузка	=	ИСтина;
	со.Записать();
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,41,3,
{"N",42},
{"S","Пересчет Планов продаж"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	ДО=ТекСтрока.Ссылка.ПолучитьОбъект();
	
	ДО.ВыполнитьРасчет	=	Истина;
	до.Записать(режимЗаписиДокумента.проведение);
	сообщить(""""+ТекСтрока.Ссылка);
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;

"},0},
{2,42,3,
{"N",43},
{"S","Обработка справ. изменений"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	//=ТекСтрока.Ссылка;
	//=ТекСтрока.ПредставлениеОбъекта;
	ДО=ЗначениеИзСтрокиВнутр(ТекСтрока.Объект);
	Сообщить(""""+ДО);
	//=ТекСтрока.ПредставлениеПеред;
	//=ТекСтрока.ПредставлениеПосле;
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,43,3,
{"N",44},
{"S","Регл заданий"},
{"S","Документы.ПланыПродаж.ПересчитатьПланыПродаж();"},0},
{2,44,3,
{"N",45},
{"S","ываывавыа"},
{"S","Сообщить(Константы.ПараметрыСоединенияЭлектроннойПочты.Получить());"},0},
{2,45,3,
{"N",46},
{"S","Прошивка коммисий"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	ДО=ТекСтрока.Ссылка.получитьОбъект();	
	ДО.Организация	=	ТекСтрока.ДокументОрганизация;
	ДО.БезКонтроля	=	Истина;
	до.Записать(РежимЗаписиДокумента.проведение);
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,46,3,
{"N",47},
{"S","Обнуление даты оплат"},
{"S","
//ТаблицаРезультата  (вся таблица, цикл по полям)
СписокКонтрагентов	= новый СписокЗначений;

ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	До=ТекСтрока.Ссылка.ПолучитьОбъект();
	До.ДатаОплаты				=	'00010101';
	до.ОбменДанными.Загрузка	=	Истина;
	
	Если СписокКонтрагентов.НайтиПоЗначению(ТекСтрока.Ссылка.Контрагент) =Неопределено Тогда
		СписокКонтрагентов.Добавить(ТекСтрока.Ссылка.Контрагент);
	КонецЕсли;
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;

для Каждого ТекЗначение из СписокКонтрагентов Цикл
	
	УправлениеВзаиморасчетами.УпорядочитьПлатежиПоКонтагенту(ТекЗначение.Значение,'20140501',Истина);
	
КонецЦикла;
"},0},
{2,47,3,
{"N",48},
{"S","прои"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	СО	=	ТекСтрока.Ссылка.ПолучитьОбъект();
	СО.Наименование	=	ТекСтрока.Ссылка.ЕдиницаПоКлассификатору.Наименование;
	СО.Записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,48,3,
{"N",49},
{"S","Регламент обмен с логистикой"},
{"S","МодульРегламентныхЗаданий.ВыполнитьОбменДаннымиСЛогистикой();"},0},
{2,49,3,
{"N",50},
{"S","Удалить неверные комм. по реализ"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
	ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	МЗ	=	РегистрыСведений.КомментарийПоКлиенту.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МЗ,ТекСтрока);	
	МЗ.Прочитать();
	МЗ.ТипКомментария	=	Перечисления.ТипыКомментария.ПустаяСсылка();
	МЗ.Записать(Истина);

	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");

КонецЦикла;
"},0},
{2,50,3,
{"N",51},
{"S","Очистка движений пдз"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	УправлениеВзаиморасчетами.ОчиститьДвиженияПДЗ(ТекСтрока.ДокументРасчетов);
	
	//	=ТекСтрока.Поле1;
	//=ТекСтрока.Регистратор;
	//=ТекСтрока.СуммаВзаиморасчетов;
	//=ТекСтрока.СуммаПДЗ;
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,51,3,
{"N",52},
{"S","прошивка Менеджер утвержден"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	СО=ТекСтрока.Ссылка.ПолучитьОбъект(); 
	СО.МенеджерУтвержден_РДС	=	Истина;
	со.обменДанными.Загрузка	=	Истина;
	со.Записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,52,3,
{"N",53},
{"S","прошивка "},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	ДО		=	ТекСтрока.Ссылка.ПолучитьОбъект();
	
	для каждого ТекСтрТЧ из до.Товары Цикл
		ТекСтрТЧ.Коэффициент	=	1;	
	КонецЦикла;
	
	//До.ПараметрПроведения 		= 	""БезКонтроляОстатков"";
	//До.НеКонтролироватьКредит	=	Истина;
	
	Попытка
		До.Записать(РежимЗаписиДокумента.Проведение);
	исключение
	КонецПопытки;		
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,53,3,
{"N",54},
{"S","прошивка  заказов"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	ОбработкаПрерыванияПользователя();
	
	ДокОб				=	ТекСтрока.ДокументОснование.ПолучитьОбъект();
	ЗаказыТЧ			=	ДокОб.Товары;
	ДокИзменен			=	Ложь;
	Для каждого ТекСтрокаЗ из ЗаказыТЧ Цикл				
		//РИ-002143
		Если ТекСтрокаЗ.Статус	<>	Перечисления.СтатусыЗаказа.Отгружен 
			или  ТекСтрокаЗ.Статус	<>	Перечисления.СтатусыЗаказа.Отменен Тогда				
			ТекСтрокаЗ.Статус							=	Перечисления.СтатусыЗаказа.Отгружен;						
			ДокИзменен									=	Истина;
		КонецЕсли;						
	КонецЦикла;
	
	Если ДокИзменен Тогда
		ДокОб.ПроведениеБезКонтрДЗР	=	Истина;	
		ДокОб.УведомлениеОтправлено	=	Истина;
		Попытка
			ДокОб.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ОбщегоНазначения.СообщитьИнформациюПользователю(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;	
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,54,3,
{"N",55},
{"S","Проведение документов"},
{"S","
// глОбщиеЗначения.ИнформационнаяБаза = Перечисления.ИнформационныеБазы.Питер ;

//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	//сообщить(строка(ТекСтрока.Ссылка));
	ДокументОбъект							=	ТекСтрока.ССылка.ПолучитьОбъект();
	
	//ДокументОбъект.НеОтправлятьСообщение	=	Истина;
	//ДокументОбъект.Дата	=	ТекСтрока.ДатаПереноса;
	//ДокументОбъект.мЧастичноеПроведение	=	ДокументОбъект.ЧастичноеПроведение;
	////ДокументОбъект.ПереносНаТекущийДень	=	Истина;
	//
	//ДокументОбъект.НеКонтролироватьКредит	=	Истина;
	
	
	
	ОбработкаПрерыванияПользователя();
	
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Конецпопытки;
	
	
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,55,3,
{"N",56},
{"S","прошивка номенклатураы"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
	ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	СО					=	ТекСтрока.Номенлатура.получитьОбъект();
	СО.СтараяГруппа_РДС	=	со.Родитель;	
	со.Родитель			=	ТекСтрока.крепежРазное;
	со.записать();
	

	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");

КонецЦикла;
"},0},
{2,56,3,
{"N",57},
{"S","Рассылка сообщений об оплатах"},
{"S","	
	
	Дата2	=	КонецДня(ТекущаяДата());
	дата1	=	'20150611';
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	""ВЫБРАТЬ
	|	ПлатежноеПоручениеВходящее.Ссылка КАК Платежка,
	|	ПлатежноеПоручениеВходящее.Контрагент КАК Контрагент,
	|	ПлатежноеПоручениеВходящее.Контрагент.ТекущийМенеджер КАК Менеджер,
	|	ПлатежноеПоручениеВходящее.СуммаДокумента
	|ИЗ
	|	Документ.ПлатежноеПоручениеВходящее КАК ПлатежноеПоручениеВходящее
	|ГДЕ
	|	ПлатежноеПоручениеВходящее.Дата МЕЖДУ &Дата1 И &Дата2
	|	И ПлатежноеПоручениеВходящее.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПлатежноеПоручениеВходящее.Дата
	|ИТОГИ ПО
	|	Менеджер,
	|	Контрагент"";
	
	Запрос.УстановитьПараметр(""Дата1"", Дата1);
	Запрос.УстановитьПараметр(""Дата2"", Дата2);
	
	Результат 		= Запрос.Выполнить();
	ВыборкаМенеджер = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаСообщений	=	новый ТаблицаЗначений;
	ТаблицаСообщений.Колонки.Добавить(""ОбъектСообщения"");
	ТаблицаСообщений.Колонки.Добавить(""Представление"");
	ТаблицаСообщений.Колонки.Добавить(""Дата"");
	ТаблицаСообщений.Колонки.Добавить(""Номер"");
	
	СуммаИтого	=	0;
	
	
	Пока ВыборкаМенеджер.Следующий() Цикл
		
		Если не ЗначениеЗаполнено(ВыборкаМенеджер.Менеджер) Тогда
			Продолжить;
		КонецЕсли;
		
		СписокРассылки	= Обмен_НБ.ПолучитьСписокПользователейРассылкиПоМенеджеру(ВыборкаМенеджер.Менеджер, ПланыВидовХарактеристик.ПраваПользователей.НеУведомлятьОбОплатах);	
		СписокРассылки.Добавить(ВыборкаМенеджер.Менеджер);
		
		
		ТаблицаСообщений.Очистить();
		СуммаИтого					=	0;
		
		Заголовок 					= ""Оплаты за "" + формат(дата1,""ДФ=dd.MM.yy"") + "" по "" + формат(дата2,""ДФ=dd.MM.yy"") +"" ""+ВыборкаМенеджер.Менеджер;
		Текст 						= ""Оплаты клиентов менеджера "" + ВыборкаМенеджер.Менеджер + "" в выписках за "" + формат(дата1,""ДФ=dd.MM.yy"") + "" по "" + формат(дата2,""ДФ=dd.MM.yy"") + "":"" + Символы.ПС;
		
		
		ВыборкаКонтрагент 			= ВыборкаМенеджер.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаКонтрагент.Следующий() Цикл
			Текст							=	Текст+""	""+строка(ВыборкаКонтрагент.Контрагент)+Символы.ПС;
			ВыборкаДетальныеЗаписи 			= ВыборкаКонтрагент.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Текст						=	Текст+""		№""+строка(ВыборкаДетальныеЗаписи.Платежка.НомерВходящегоДокумента)+"" от ""+формат(ВыборкаДетальныеЗаписи.Платежка.ДатаВходящегоДокумента,""ДФ=dd.MM.yy"")+""		""+Строка(ВыборкаДетальныеЗаписи.СуммаДокумента)+Строка(ВыборкаДетальныеЗаписи.Платежка.ВалютаДокумента)+Символы.ПС;	
				
				НоваяСтрока					=	ТаблицаСообщений.Добавить();
				НоваяСтрока.ОбъектСообщения	=	ВыборкаДетальныеЗаписи.Платежка;
				НоваяСтрока.Представление	=	Строка(ВыборкаДетальныеЗаписи.Платежка);
				НоваяСтрока.Дата			=	ВыборкаДетальныеЗаписи.Платежка.Дата;
				НоваяСтрока.Номер			=	ВыборкаДетальныеЗаписи.Платежка.Номер;
				СуммаИтого					=	СуммаИтого+ВыборкаДетальныеЗаписи.СуммаДокумента;
				
			КонецЦикла;
		КонецЦикла;
		Текст	=	Текст+""_________________________________________________""+Символы.ПС+""ИТОГ:				""+Строка(СуммаИтого)+"" руб."";		
				
		
		СлужбаСообщений.СоздатьСообщение(СписокРассылки,Заголовок,Текст,ТаблицаСообщений,,""Оплата"",,,,Справочники.Рассылки.СообщенияОПлатежках);		
	КонецЦикла;"},0},
{2,57,3,
{"N",58},
{"S","прошивка  Прайса контрагента"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	МЗ	=	РегистрыСведений.ПрайсКонтрагента_РДС.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(мз,ТекСтрока);
	мз.Записать();
	
	
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,58,3,
{"N",59},
{"S","прошивка  Реализ"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	ДО=ТекСтрока.Ссылка.ПолучитьОбъект();
	до.Частичноепроведение=Ложь;
	до.обменданными.загрузка=истина;
	до.записать();
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,59,3,
{"N",60},
{"S","Восстановление ндс в док"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	мЭтотОбъект	=	ТекСтрока.Ссылка.ПолучитьОбъект();
	
	Для каждого СтрокаТабличнойЧасти из мЭтотОбъект.Товары Цикл	
		
		ОбработкаТабличныхЧастей.ЗаполнитьСтавкуНДСТабЧасти(СтрокаТабличнойЧасти, мЭтотОбъект	, ""Реализация"");	
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти, мЭтотОбъект	);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, мЭтотОбъект	);
		
	КонецЦикла;
	
	
	мЭтотОбъект.ПараметрПроведения 		= 	""БезКонтроляОстатков"";
	мЭтотОбъект.НеКонтролироватьКредит	=	Истина;
	мЭтотОбъект.обменДанными.загрузка	=	Истина;
	Попытка
		//мЭтотОбъект.Записать(РежимЗаписиДокумента.Проведение);
		мЭтотОбъект.Записать();

	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	СчетФактура = УчетНДС.НайтиПодчиненныйДокумент(мЭтотОбъект.ссылка, ""СчетФактураВыданный"");
	Если ЗначениеЗаполнено(СчетФактура) Тогда		
		МодульСерверныхПроцедур.СинхронизацияПоказателей(СчетФактура,мЭтотОбъект.Проведен,мЭтотОбъект.ПометкаУдаления);			
	КонецЕсли; // ЗначениеЗаполнено(СчетФактура)	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,60,3,
{"N",61},
{"S","Занчение из строки вн"},
{"S","ОбъектСсылка = ЗначениеИзСтрокиВнутр(""{""#"",f7112cf6-c263-4bbd-91d5-e1a72ae9d67e,0:8515d4ae528c882411e48c207569f710}"");

"},0},
{2,61,3,
{"N",62},
{"S","Прошивка кредитов"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	МЗ		=	РегистрыСведений.КредитыКонтрагентов_РДС.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МЗ,Текстрока);
	мз.Основание		=	Перечисления.ОснованияКредитов.РешениеАН;;
	мз.ВидОбеспечения	=	Справочники.ВидыОбеспечения.Вид_100;
	мз.Записать(Истина);
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;

"},0},
{2,62,3,
{"N",63},
{"S","ываываыва"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	СО=ТекСтрока.Ссылка.получитьОбъект();
	СО.ВидОперации	=	ТекСтрока.ВидОперации;
	со.обменДанными.Загрузка	=	Истина;
	со.записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,63,3,
{"N",64},
{"S","234234324324"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	МЗ	=	РегистрыСведений.ПДЗ_Контрагента.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(мз,ТекСтрока);
	мз.Записать();	
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,64,3,
{"N",65},
{"S","Перенумерация"},
{"S","ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	                    					
	ТекСтрока.Номер	=	""Тсф-""+""""+ОбщегоНазначения.ПолучитьСтроковыйНомерБезПрефиксов(ТекСтрока.Номер);
	
	
	ДО=ТекСтрока.Ссылка.ПолучитьОбъект();
	до.номер	=	ТекСтрока.Номер;
	
	до.записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,65,3,
{"N",66},
{"S","ывавыаыв"},
{"S","	НС	=	РегистрыСведений.СтекПДЗ.СоздатьНаборЗаписей();
	нс.Записать();
"},0},
{2,66,3,
{"N",67},
{"S","Приоритет на сайте"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)

ТекПозиция = 0;	
СО	=	Справочники.КонтактныеЛицаКонтрагентов.СоздатьЭлемент();
Свойство	=	ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду(""100000232"");
Если не значениезаполнено(Свойство) Тогда
	сообщить(""---"");
Иначе
	Для каждого ТекСтрока из ТаблицаРезультата Цикл	
		ТекСтрока.Поле1	=	со.ТолькоЦифрыИзСтроки(ТекСтрока.Поле1);		
		ЕСли не пустаяСтрока(ТекСтрока.Поле1) Тогда
			МЗ			=	РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
			МЗ.Объект	=	ТекСтрока.Ссылка;
			МЗ.Свойство	=	Свойство;
			мз.Значение	=	ТекСтрока.Поле1;
			мз.записать();
		Конецесли;	
		
		ТекПозиция = ТекПозиция + 1;
		Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
		
	КонецЦикла;
	
	
Конецесли;

"},0},
{2,67,3,
{"N",68},
{"S","Обработать ЗЧП"},
{"S","
Имяфайла	=	"""";
// Сохранение дерева запросов 	
Если ПустаяСтрока(ИмяФайла) Тогда
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = ""Укажите файл для списка запросов"";
	Диалог.Фильтр = ""Файлы значений (*.znc)|*.znc|Все файлы (*.*)|*.*"";
	Диалог.Расширение = ""znc"";
	Если Диалог.Выбрать() Тогда
		ИмяФайла = Диалог.ПолноеИмяФайла;
		ИмяПути = Диалог.Каталог;
	КонецЕсли;
КонецЕсли;

РезультатТаблица = ЗначениеИзФайла(ИмяФайла);

	ТекПозиция = 0;	
	
Для каждого ТекСтрока из РезультатТаблица Цикл


	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
	
	Если ТекСтрока.Ссылка.ЗапретитьЧастичноеПроведение_РДС Тогда
		продолжить;
	КонецЕсли;
	
	СО	=	ТекСтрока.Ссылка.ПолучитьОбъект();
	со.ЗапретитьЧастичноеПроведение_РДС	=	ИСтина;
	со.обменданными.Загрузка	=	Истина;
	со.записать();	
	
КонецЦикла;

"},0},
{2,68,3,
{"N",69},
{"S","Прошивка причин"},
{"S","
//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	ДО	=ТекСтрока.Ссылка.ПолучитьОбъект();
	ДО.ПричинаПредвПроведения	=	Перечисления.ПричиныЧастичногоПроведения.ПустаяСсылка();;	
	ДО.Комментарий	=	СтрЗаменить(ДО.Комментарий,"" Заказ проведен без причины"","""");
	
	до.НеРассылатьСообщения		=	Истина;
	до.обменданными.загрузка	=	Истина;
	до.записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,69,3,
{"N",70},
{"S","Прошивка причин"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	ДО							=	ТекСтрока.Ссылка.ПолучитьОбъект();
	
	до.НеРассылатьСообщения		=	Истина;
	до.ЧастичноеПроведение		=	Ложь;
	до.ОбменДанными.Загрузка	=	Истина;
	до.Записать();	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,70,3,
{"N",71},
{"S","Прошивка номенклатуры"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	//=ТекСтрока.Поставщик;
	СО=ТекСтрока.СоответствиеРДС.ПолучитьОбъект();
	
	Если ЗначениеЗаполнено(ТекСтрока.Поставщик) Тогда
		НоваяСтрока						=	СО.Поставщики.Добавить();
		НоваяСтрока.КонтрагентСтрока	=	ТекСтрока.Поставщик;
	КонецЕсли;
	
	со.ОбменДанными.Загрузка=Истина;
	со.Записать();
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,71,3,
{"N",72},
{"S","ыпавапвп"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	СО=ТекСтрока.Ссылка.ПолучитьОбъект();
	СО.ЗапретитьЧастичноеПроведение_РДС = Истина;
	со.обменДанными.Загрузка	=	Истина;
	со.Записать();
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
	//прервать;
КонецЦикла;
"},0},
{2,72,3,
{"N",73},
{"S","Добавить записи в Стек ПДЗ"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для Каждого ТекСтрока Из ТаблицаРезультата Цикл
	
	Запись = РегистрыСведений.СтекПДЗ.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, ТекСтрока);
	Запись.Записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,73,3,
{"N",74},
{"S","Очистить ПДЗ по документам"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для Каждого ТекСтрока Из ТаблицаРезультата Цикл
	
	ТаблицаДвижений = РегистрыНакопления.ПДЗ.СоздатьНаборЗаписей();	
	ТаблицаДвижений.Отбор.Регистратор.Значение = ТекСтрока.Регистратор;
	ТаблицаДвижений.Записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;

"},0},
{2,74,3,
{"N",75},
{"S","Проведение по партиям и себестоимости"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	
	
	УправлениеЗапасамиПартионныйУчет.ДвижениеПартийТоваров (ТекСтрока.Ссылка,
	,
	0,
	Истина,
	Ложь,
	Ложь,
	Ложь,
	Ложь,
	Неопределено,
	Истина,
	Неопределено);
	
	
	
	УправлениеЗатратами.ВыполнитьДвиженияПоЗатратам(ТекСтрока.Ссылка);				
	УправлениеЗатратами.ВыполнитьДвиженияПоЗатратамПоступление(ТекСтрока.Ссылка);				
	УправлениеЗапасами.ВыполнитьДвиженияПоГТД(ТекСтрока.Ссылка);	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,75,3,
{"N",76},
{"S","Прошивка ПДЗ"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0; 
Для Каждого ТекСтрока Из ТаблицаРезультата Цикл
	
	ДО =  ТекСтрока.Регистратор.ПолучитьОбъект();
	
	Выборка = РегистрыНакопления.ВзаиморасчетыСКонтрагентами.ВыбратьПоРегистратору(ТекСтрока.Регистратор);
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ДО.Движения.ВзаиморасчетыСКонтрагентами.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,выборка);
	КонецЦикла;
	
	УправлениеВзаиморасчетами.СформироватьДвиженияПДЗ(ТекСтрока.Регистратор,ДО.Движения,ЛОжь,Истина);
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,76,3,
{"N",77},
{"S","Очищение ДокОсн в ПТУ"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0; 
Для Каждого ТекСтрока Из ТаблицаРезультата Цикл
	
	ОбработкаПрерыванияПользователя();
	ДО =  ТекСтрока.ДокументОприходования.ПолучитьОбъект();
	ДО.ДокументОснование = неопределено;
	до.ОбменДанными.Загрузка = истина;
	до.Записать();
	
	Сообщить("""" + До);
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,77,3,
{"N",78},
{"S","Прошивка ПРОДАЖИ по обратным ПТУ (возвраты)"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	
	ДО=ТекСтрока.Ссылка.ПолучитьОбъект();
	
	АпдейтПродажи = ИСТИНА;
	//ДО.Движения[""Продажи""].Прочитать();
	//Если ДО.Движения[""Продажи""].Количество() Тогда
	//	АпдейтПродажи = ЛОЖЬ;
	//КонецЕсли;
	
	АпдейтПродажиСебестоимость = ИСТИНА;
	//ДО.Движения[""ПродажиСебестоимость""].Прочитать();
	//Если ДО.Движения[""ПродажиСебестоимость""].Количество() Тогда
	//	АпдейтПродажиСебестоимость = ЛОЖЬ;
	//КонецЕсли;
	
	Отказ = Ложь;
	МодульПодписокНаСобытия.ОбработкаПроведенияПоступлениеТоваровУслугСторноПродажи(ДО, Отказ, РежимПроведенияДокумента.Неоперативный);
	
	Если Отказ Тогда
		Продолжить;
	КонецЕсли;
	
	НачатьТранзакцию();
	Если АпдейтПродажи Тогда
		ДО.Движения[""Продажи""].Записать();
		Сообщить(""Продажи "" + ДО);
	КонецЕсли;
	Если АпдейтПродажиСебестоимость Тогда
		ДО.Движения[""ПродажиСебестоимость""].Записать();
		Сообщить(""Продажи себестоимость "" + ДО);
	КонецЕсли;
	//ДО.ОбменДанными.Загрузка=Истина;
	//ДО.Записать();
	ЗафиксироватьТранзакцию();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,78,3,
{"N",79},
{"S","Прошивка Москва Ос и Область"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	СО=ТекСтрока.Ссылка.ПолучитьОбъект();
	//=ТекСтрока.ФактическийАдрес;
	со.родитель	=	ТекСтрока.ЭтоМосква;
	со.ОбменДанными.Загрузка	=	ИСтина;
	со.записать();
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,79,3,
{"N",80},
{"S","ываыав"},
{"S","
ПутьПапки	=	""C:"";//Константы.КаталогВложенийЭлектронныхПисем.получить();
ИмяФайла	=	""123.zip"";	
ПолныйПуть	=	""""+ПутьПапки+""\""+ИмяФайла;

Имяфайла	=	"""";
Если ПустаяСтрока(ИмяФайла) Тогда
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = ""Укажите файл содержащий значения"";
	Диалог.Фильтр = ""Файлы значений (*.znc)|*.znc|Все файлы (*.*)|*.*"";
	Диалог.Расширение = ""znc"";
	Если Диалог.Выбрать() Тогда
		ИмяФайла = Диалог.ПолноеИмяФайла;
		ИмяПути = Диалог.Каталог;
	КонецЕсли;
КонецЕсли;


Данные	=	новый ДвоичныеДанные(Имяфайла);
"},0},
{2,80,3,
{"N",81},
{"S","УИН"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	Сообщить(ТекСтрока.Ссылка.УникальныйИдентификатор());
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,81,3,
{"N",82},
{"S","ПСЭ - прошивка ед. измерения"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	Объект=ТекСтрока.Ссылка.ПолучитьОбъект();
	//=ТекСтрока.ВидНоменклатуры;
	//=ТекСтрока.БазоваяЕдиницаИзмерения;
	//=ТекСтрока.ЕдиницаДляОтчетов;
	//=ТекСтрока.ЕдиницаХраненияОстатков;
	
	
	
	ВыборкаЕдиниц = Справочники.ЕдиницыИзмерения.Выбрать(, Объект.Ссылка);
	
	Если Не ВыборкаЕдиниц.Следующий() Тогда
		НайденнаяЕдиницаОбъект = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
		НайденнаяЕдиницаОбъект.Наименование            = Объект.БазоваяЕдиницаИзмерения.Наименование;
		НайденнаяЕдиницаОбъект.ЕдиницаПоКлассификатору = Объект.БазоваяЕдиницаИзмерения;
		НайденнаяЕдиницаОбъект.Коэффициент             = 1;
		НайденнаяЕдиницаОбъект.Владелец                = Объект.Ссылка;
		
		НайденнаяЕдиницаОбъект.Записать();
		
		Объект.ЕдиницаХраненияОстатков = НайденнаяЕдиницаОбъект.Ссылка;	
		Объект.ЕдиницаДляОтчетов = НайденнаяЕдиницаОбъект.Ссылка;			
		
	Иначе
		Объект.ЕдиницаХраненияОстатков = ВыборкаЕдиниц.Ссылка;	
		Объект.ЕдиницаДляОтчетов = ВыборкаЕдиниц.Ссылка;						
	КонецЕсли;
	
	Объект.Записать();
	
	
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,82,3,
{"N",83},
{"S","ПСЭ - установить ед. измерения"},
{"S","//ТаблицаРезультата  (вся таблица, цикл по полям)
ТекПозиция = 0;	
Для каждого ТекСтрока из ТаблицаРезультата Цикл
	Объект=ТекСтрока.Ссылка.ПолучитьОбъект();
	//=ТекСтрока.ВидНоменклатуры;
	//=ТекСтрока.БазоваяЕдиницаИзмерения;
	//=ТекСтрока.ЕдиницаДляОтчетов;
	//=ТекСтрока.ЕдиницаХраненияОстатков;
	
	Для каждого ТекСтрокаТч из Объект.Товары Цикл
		Если не ЗначениеЗаполнено(ТекСтрокаТч.ЕдиницаИзмерения) Тогда
			ТекСтрокаТч.ЕдиницаИзмерения = ТекСтрокаТч.Номенклатура.ЕдиницаХраненияОстатков;		
		Конецесли;		
	Конеццикла;
	
	
	
	//ВыборкаЕдиниц = Справочники.ЕдиницыИзмерения.Выбрать(, Объект.Ссылка);
	//
	//Если Не ВыборкаЕдиниц.Следующий() Тогда
	//	НайденнаяЕдиницаОбъект = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
	//	НайденнаяЕдиницаОбъект.Наименование            = Объект.БазоваяЕдиницаИзмерения.Наименование;
	//	НайденнаяЕдиницаОбъект.ЕдиницаПоКлассификатору = Объект.БазоваяЕдиницаИзмерения;
	//	НайденнаяЕдиницаОбъект.Коэффициент             = 1;
	//	НайденнаяЕдиницаОбъект.Владелец                = Объект.Ссылка;
	//	
	//	НайденнаяЕдиницаОбъект.Записать();
	//	
	//	Объект.ЕдиницаХраненияОстатков = НайденнаяЕдиницаОбъект.Ссылка;	
	//	Объект.ЕдиницаДляОтчетов = НайденнаяЕдиницаОбъект.Ссылка;			
	//	
	//Иначе
	//	Объект.ЕдиницаХраненияОстатков = ВыборкаЕдиниц.Ссылка;	
	//	Объект.ЕдиницаДляОтчетов = ВыборкаЕдиниц.Ссылка;						
	//КонецЕсли;
	
	Объект.Записать();
	
	
	
	
	ТекПозиция = ТекПозиция + 1;
	Состояние(""Выполнено "" + Окр(ТекПозиция / ТаблицаРезультата.Количество() * 100) + ""%"");
	
КонецЦикла;
"},0},
{2,83,3,
{"N",84},
{"S","ПСЭ - обнулить серии"},
{"S",""},0}
},-1,83},
{0,0}
}
}